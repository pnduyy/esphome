
esphome:
  name: esphome-rgb
  comment: eshphome-rgb 16.11.2022
  project:
    name: "pnduyy.esphome-rgb"
    version: "2.2.0"
  on_boot:
    #priority: 850
    then:
      - script.execute: on_start

esp32:
  board: esp32dev
  framework:
    type: arduino
## Enable logging
logger:
 # level: VERY_VERBOSE
## Enable Home Assistant API
api:
  reboot_timeout: 0s
## Update code over wifi
ota:
  password: "0987654321234567890"

wifi:
  networks:
  - ssid: "rgb"
    password: "12345678"
  - ssid: "IOT"
    password: "01102019"
  reboot_timeout: 60min   #auto reboot after 120min if wifi disconnect
  manual_ip:
    static_ip: 192.168.1.56
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8
  ## Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESP->rgb|12345678"
    password: "09876543"
    channel: 6
captive_portal:
web_server:
  port: 80
mdns:
  disabled: false

##============================main code================##
text_sensor:
  - platform: template
    name: "xx-About ESP wifi-xx"
    lambda: |-
      return {"Nếu ESP không kết nối wifi, tạo wifi/pass là rgb/12345678 để ESP tự kết nối. IP: 192.168.1.56"};
#text_sensor Hiển thị thời gian uptime
  - platform: template
    name: "rgb1-Uptime"
    id: uptime_human
    icon: mdi:clock-start
#text_sensor Hiển thị thời gian local
  - platform: template
    name: "rgb2-Local Time"
    id: time_local
    update_interval: 60s
    lambda: |-
      auto time_text = id(rgb_time).now().strftime("%d-%m-%Y - %H:%M:%S");
      return { time_text };

  - platform: wifi_info
    ip_address:
      name: "rgb31-IP Address"
    ssid:
      name: "rgb30-Wifi Connected"

button:
#button Khai bái button restart esphome
  - platform: restart
    name: "rgb3-Restart"
  - platform: factory_reset
    name: "xx-Reset to Factory-xx"   

light:
  - platform: rgb
    name: "rgb6-Đèn bàn thờ"
    id: denbantho_rgb
    red: r_denbantho_rgb
    green: g_denbantho_rgb
    blue: b_denbantho_rgb
    effects:
      - random:
          name: Chuyển màu ngẫu nhiên 1s
      - random:
          name: Chuyển màu ngẫu nhiên 30s
          transition_length: 30s
          update_interval: 30s
      - pulse:
          name: Sáng dần tắt dần 1s
      - pulse:
          name: Sáng dần tắt dần 5s
          transition_length: 5s      
          update_interval: 10s
      - pulse:
          name: Sáng dần tắt dần 0.5s
          transition_length: 0.5s
          update_interval: 0.5s
      - strobe:
          name: Sáng tắt liên tục 1s
#nen dien 
  - platform: binary
    name: "rgb8-Nến điện"
    output: nendien_out
    id: nendien
#den ngu mono
  - platform: monochromatic
    name: "rgb91-Đèn ngủ"
    output: denngumono_out
    id: denngumono
#den ban tho mono
  - platform: monochromatic
    name: "rgb9-Đèn bàn thờ mono"
    output: denbanthomono_out
    id: denbanthomono
#den dau
  - platform: monochromatic
    name: "rgb7-Đèn dầu"
    output: dendau_out
    id: dendau
    
output:
#Khai báo 3 pin RGB đèn bàn thờ
  - platform: ledc
    id: r_denbantho_rgb
    pin: GPIO23
    max_power: 80%
  - platform: ledc
    id: g_denbantho_rgb
    pin: GPIO22
    max_power: 80%
  - platform: ledc
    id: b_denbantho_rgb
    pin: GPIO21
    max_power: 80%
#nen dien
  - platform: gpio
    id: nendien_out
    pin: GPIO19
#den ngu mono - tuong thanh gia
  - platform: ledc
    pin: GPIO18
    id: denngumono_out
#den ban tho mono - 
  - platform: ledc
    pin: GPIO32
    id: denbanthomono_out
#den dau - 
  - platform: ledc
    pin: GPIO5
    id: dendau_out
    

sensor:
#Tính toán thời gian uptime
  - platform: uptime
    name: "rgb0-Uptime Sensor"
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();
#sensor nhiet do do am DHT
  - platform: dht
    pin: GPIO15
    temperature:
      name: "rgb4-Nhiệt độ"
    humidity:
      name: "rgb5-Độ ẩm"
    update_interval: 60s   

  - platform: wifi_signal
    name: "rgb32-Wifi signal connected"           
            
time:
  - platform: sntp
    timezone: "Asia/Ho_Chi_Minh"
    servers: 203.113.174.44
    id: rgb_time
#    on_time:
#      - cron: '0 0 4 * * *'
#        then: 
#          - script.execute: on_all
#      - cron: '0 0 6 * * *'
 #       then: 
#          - script.execute: on_normal
#      - cron: '0 55 14 * * *'
#        then: 
#          - script.execute: on_all
#      - cron: '0 40 15 * * *'
#        then: 
#          - script.execute: on_normal
#      - cron: '0 30 18 * * *'
#        then: 
#          - script.execute: on_all
#      - cron: '0 0 21 * * *'
#        then: 
#          - script.execute: on_sleep 

##======script======
script:
  - id: off_all
    then:
      - light.turn_off: nendien
      - light.turn_off: denbanthomono 
      - light.turn_off: dendau
      - light.turn_off: denngumono
      - light.turn_off: denbantho_rgb
  - id: on_all
    then:
      - light.turn_on: nendien
      - light.control:
          id: denngumono
          state: on
          brightness: 1
      - light.control:
          id: denbanthomono
          state: on
          brightness: 0.9
      - light.control:
          id: dendau
          state: on
          brightness: 0.8
      - light.control:
          id: denbantho_rgb
          state: on
          brightness: 1
          effect: "Chuyển màu ngẫu nhiên 1s"
  - id: on_normal
    then:
      - script.execute: on_all
      - light.turn_off: nendien
      - light.turn_off: denbanthomono
      - light.turn_off: denngumono
  - id: on_sleep
    then:
      - light.turn_off: nendien
      - light.turn_off: denbanthomono
      - light.control:
          id: denngumono
          state: on
          brightness: 1
      - light.control:
          id: dendau
          state: on
          brightness: 0.5
      - light.control:
          id: denbantho_rgb
          state: on
          brightness: 0.5
          red: 100%
          green: 75%
          blue: 0
  - id: on_start
    then:
      - repeat:
          count: 3
          then:
            - script.execute: on_all
            - delay: 2s
            - script.execute: off_all
            - delay: 2s
      - script.execute: on_normal
      - delay: 1min
 #     - if:
 #         condition:
 #           - lambda: >-
 #               return id(rgb_time).now().hour >= 18 && id(rgb_time).now().hour <= 21 ;
 #         then:
 #           - script.execute: on_all
 #         else:
 #           - if:
 #               condition:
 #                 - lambda: >-
 #                     return id(rgb_time).now().hour > 21 ;
 #               then:
 #                 - script.execute: on_sleep

select:
  - platform: template
    name: "rgb92-Mode select"
    id: modeselect
    optimistic: true
    options:
      - "Tắt đèn all"
      - "Mở đèn all"
      - "Normal"
      - "Sleep"
    initial_option: "Normal"
    on_value:
      then:
        - lambda: >-
            if (id(modeselect).state == "Tắt đèn all") {
                id(off_all).execute();}
            else if (id(modeselect).state == "Mở đèn all") {
                     id(on_all).execute();}
                  else if (id(modeselect).state == "Normal") {
                           id(on_normal).execute();}
                        else if (id(modeselect).state == "Sleep") {
                                 id(on_sleep).execute();}
